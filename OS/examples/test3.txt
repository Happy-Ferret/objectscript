
[FILE] test3.os
[2] print(5 " differences")

begin function
  begin locals, total 48
    0 _E
    1 _G
    35 Person
    36 p
    37 IvanPerson
    38 p
    39 vec3
    40 v1
    41 v2
    42 v3
    46 a
    47 transform
  end locals
  begin call
    get env var print
    begin params 2
      push const number 5
      ,
      push const string " differences"
    end params ret values 2
  end call ret values 0


[5] var i = 4

  begin scope
    begin locals 4
      2 i
      3 name
      4 count
      5 time
    end locals
    begin set local var
      push const number 4
    end set local var i (2 0)


[7] var name, count, time = "Smith", 3 + 2/i, 1.23

    begin set local var
      begin set local var
        begin set local var
          begin params 3
            push const string "Smith"
            ,
            begin operator +
              push const number 3
              begin operator /
                push const number 2
                get local var i (2 0)
              end operator /
            end operator +
            ,
            push const number 1.23
          end params ret values 3
        end set local var time (5 0)
      end set local var count (4 0)
    end set local var name (3 0)


[9] print concat("name: " name ", count: " count ", time: " time)

    begin call
      get env var print
      begin params 1
        begin call
          get env var concat
          begin params 6
            push const string "name: "
            ,
            get local var name (3 0)
            ,
            push const string ", count: "
            ,
            get local var count (4 0)
            ,
            push const string ", time: "
            ,
            get local var time (5 0)
          end params ret values 6
        end call ret values 1
      end params ret values 1
    end call ret values 0
  end scope ret values 0


[13] print {firstname="Ivan" lastname="Petrov"}

  begin call
    get env var print
    begin params 1
      begin object 2
        begin set by name
          push const string "Ivan"
        end set by name: [firstname]
        ,
        begin set by name
          push const string "Petrov"
        end set by name: [lastname]
      end object
    end params ret values 1
  end call ret values 0


[17] var a = {x=1, y=3; "zero" "one", "two" last:7,}

  begin scope
    begin locals 11
      6 a
      7 b
      8 i
      9 j
      10 k
      11 test
      12 a
      13 b
      14 a
      15 b
      16 c
    end locals
    begin set local var
      begin object 6
        begin set by name
          push const number 1
        end set by name: [x]
        ,
        begin set by name
          push const number 3
        end set by name: [y]
        ,
        begin set auto index
          push const string "zero"
        end set auto index
        ,
        begin set auto index
          push const string "one"
        end set auto index
        ,
        begin set auto index
          push const string "two"
        end set auto index
        ,
        begin set by name
          push const number 7
        end set by name: [last]
      end object
    end set local var a (6 0)


[18] print a[1]

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (6 0)
          push const number 1
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[19] print a

    begin call
      get env var print
      begin params 1
        get local var a (6 0)
      end params ret values 1
    end call ret values 0


[22] a = {[2+3]="five" y=3}

    begin set local var
      begin object 2
        begin set by exp
          push const number 5
          push const string "five"
        end set by exp
        ,
        begin set by name
          push const number 3
        end set by name: [y]
      end object
    end set local var a (6 0)


[23] print a[5]

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (6 0)
          push const number 5
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[24] print a

    begin call
      get env var print
      begin params 1
        get local var a (6 0)
      end params ret values 1
    end call ret values 0


[26] a = {x=1 y=2}

    begin set local var
      begin object 2
        begin set by name
          push const number 1
        end set by name: [x]
        ,
        begin set by name
          push const number 2
        end set by name: [y]
      end object
    end set local var a (6 0)


[28] var b = {[a]="powerful" 7="greate"}

    begin set local var
      begin object 2
        begin set by exp
          get local var a (6 0)
          push const string "powerful"
        end set by exp
        ,
        begin set by index
          push const string "greate"
        end set by index: [7]
      end object
    end set local var b (7 0)


[29] print b[a]

    begin call
      get env var print
      begin params 1
        begin get property
          get local var b (7 0)
          get local var a (6 0)
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[31] print([10, 20, 30, 40])

    begin call
      get env var print
      begin params 1
        begin array 4
          begin set auto index
            push const number 10
          end set auto index
          ,
          begin set auto index
            push const number 20
          end set auto index
          ,
          begin set auto index
            push const number 30
          end set auto index
          ,
          begin set auto index
            push const number 40
          end set auto index
        end array
      end params ret values 1
    end call ret values 0


[33] print([10 20 30 40])

    begin call
      get env var print
      begin params 1
        begin array 4
          begin set auto index
            push const number 10
          end set auto index
          ,
          begin set auto index
            push const number 20
          end set auto index
          ,
          begin set auto index
            push const number 30
          end set auto index
          ,
          begin set auto index
            push const number 40
          end set auto index
        end array
      end params ret values 1
    end call ret values 0


[36] var i, j, k = 0, 1, 3

    begin set local var
      begin set local var
        begin set local var
          begin params 3
            push const number 0
            ,
            push const number 1
            ,
            push const number 3
          end params ret values 3
        end set local var k (10 0)
      end set local var j (9 0)
    end set local var i (8 0)


[37] echo("i="i", j="j", k="k"\n")

    begin call
      get env var echo
      begin params 7
        push const string "i="
        ,
        get local var i (8 0)
        ,
        push const string ", j="
        ,
        get local var j (9 0)
        ,
        push const string ", k="
        ,
        get local var k (10 0)
        ,
        push const string "
"
      end params ret values 7
    end call ret values 0


[40] i, j = j, i

    begin set local var
      begin set local var
        begin params 2
          get local var j (9 0)
          ,
          get local var i (8 0)
        end params ret values 2
      end set local var j (9 0)
    end set local var i (8 0)


[41] echo("after swap: i="i", j="j"\n")

    begin call
      get env var echo
      begin params 5
        push const string "after swap: i="
        ,
        get local var i (8 0)
        ,
        push const string ", j="
        ,
        get local var j (9 0)
        ,
        push const string "
"
      end params ret values 5
    end call ret values 0


[44] var test = function(){ return 1, 2 }

    begin set local var
      begin function
        begin locals, total 2
          0 _E
          1 _G
        end locals
        begin return
          push const number 1
          ,
          push const number 2
        end return values 2
      end function
    end set local var test (11 0)


[45] var a, b = test()

    begin set local var
      begin set local var
        begin call
          get local var test (11 0)
          begin params 1
            nop
          end params ret values 0
        end call ret values 2
      end set local var b (13 0)
    end set local var a (12 0)


[46] print("results from function" "a="..a "b="..b)

    begin call
      get env var print
      begin params 3
        push const string "results from function"
        ,
        begin operator ..
          push const string "a="
          get local var a (12 0)
        end operator ..
        ,
        begin operator ..
          push const string "b="
          get local var b (13 0)
        end operator ..
      end params ret values 3
    end call ret values 0


[49] var a, b, c = test()

    begin set local var
      begin set local var
        begin set local var
          begin call
            get local var test (11 0)
            begin params 1
              nop
            end params ret values 0
          end call ret values 3
        end set local var c (16 0)
      end set local var b (15 0)
    end set local var a (14 0)


[50] print("results from function" "a="..a "b="..b "c="..c)

    begin call
      get env var print
      begin params 4
        push const string "results from function"
        ,
        begin operator ..
          push const string "a="
          get local var a (14 0)
        end operator ..
        ,
        begin operator ..
          push const string "b="
          get local var b (15 0)
        end operator ..
        ,
        begin operator ..
          push const string "c="
          get local var c (16 0)
        end operator ..
      end params ret values 4
    end call ret values 0
  end scope ret values 0


[54] print "Object iterator test"

  begin scope
    begin locals 2
      17 obj
      29 range
    end locals
    begin call
      get env var print
      begin params 1
        push const string "Object iterator test"
      end params ret values 1
    end call ret values 0


[55] var obj = { null awesome=true 12 "excellent" }

    begin set local var
      begin object 4
        begin set auto index
          const null
        end set auto index
        ,
        begin set by name
          const true
        end set by name: [awesome]
        ,
        begin set auto index
          push const number 12
        end set auto index
        ,
        begin set auto index
          push const string "excellent"
        end set auto index
      end object
    end set local var obj (17 0)


[56] for(var k, v in obj){

    begin scope
      begin locals 4
        18 k
        19 v
        20 #func
        21 #valid
      end locals
      new local var k (18 0)

      new local var v (19 0)

      new local var #func (20 0 temp)

      new local var #valid (21 0 temp)

      begin code list
        begin set local var
          begin call method
            get local var obj (17 0)
            begin params 1
              push const string "__iter"
            end params ret values 1
          end call method ret values 1
        end set local var #func (20 0 temp)

        begin loop
          begin set local var
            begin set local var
              begin set local var
                begin call
                  get local var #func (20 0 temp)
                  begin params 0
                  end params ret values 0
                end call ret values 3
              end set local var v (19 0)
            end set local var k (18 0)
          end set local var #valid (21 0 temp)

          begin if
            begin bool exp
              begin logic not
                get local var #valid (21 0 temp)
              end logic not
            end bool exp
            begin then
              break
            end then
          end if ret values 0


[57] print( k " --> " v )

          begin scope
            begin call
              get env var print
              begin params 3
                get local var k (18 0)
                ,
                push const string " --> "
                ,
                get local var v (19 0)
              end params ret values 3
            end call ret values 0
          end scope ret values 0
        end loop ret values 0
      end code list ret values 0
    end scope ret values 0


[60] print "Object iterator test, only keys"

    begin call
      get env var print
      begin params 1
        push const string "Object iterator test, only keys"
      end params ret values 1
    end call ret values 0


[61] obj = { null awesome=true 12 "excellent" }

    begin set local var
      begin object 4
        begin set auto index
          const null
        end set auto index
        ,
        begin set by name
          const true
        end set by name: [awesome]
        ,
        begin set auto index
          push const number 12
        end set auto index
        ,
        begin set auto index
          push const string "excellent"
        end set auto index
      end object
    end set local var obj (17 0)


[62] for(k in obj){

    begin scope
      begin locals 3
        22 k
        23 #func
        24 #valid
      end locals
      new local var k (22 0)

      new local var #func (23 0 temp)

      new local var #valid (24 0 temp)

      begin code list
        begin set local var
          begin call method
            get local var obj (17 0)
            begin params 1
              push const string "__iter"
            end params ret values 1
          end call method ret values 1
        end set local var #func (23 0 temp)

        begin loop
          begin set local var
            begin set local var
              begin call
                get local var #func (23 0 temp)
                begin params 0
                end params ret values 0
              end call ret values 2
            end set local var k (22 0)
          end set local var #valid (24 0 temp)

          begin if
            begin bool exp
              begin logic not
                get local var #valid (24 0 temp)
              end logic not
            end bool exp
            begin then
              break
            end then
          end if ret values 0


[63] print k

          begin scope
            begin call
              get env var print
              begin params 1
                get local var k (22 0)
              end params ret values 1
            end call ret values 0
          end scope ret values 0
        end loop ret values 0
      end code list ret values 0
    end scope ret values 0


[66] print "Array iterator test"

    begin call
      get env var print
      begin params 1
        push const string "Array iterator test"
      end params ret values 1
    end call ret values 0


[67] Array.__iter = function(){

    begin set property
      begin function
        begin locals, total 4
          0 _E
          1 _G
          2 i
          3 self
        end locals

[68] var i, self = 0, this

        begin set local var
          begin set local var
            begin params 2
              push const number 0
              ,
              push this
            end params ret values 2
          end set local var self (3 0)
        end set local var i (2 0)


[69] return function(){

        begin code list
          begin return
            begin function
              begin locals, total 3
                0 _E
                1 _G
              end locals

[70] if(i < #self){

              begin if
                begin bool exp
                  begin logic <
                    get local var i (2 1)
                    begin length
                      get local var self (3 1)
                    end length
                  end logic <
                end bool exp
                begin then

[71] print("... inside of array iter func: " i self[i])

                  begin scope
                    begin locals 1
                      2 #temp
                    end locals
                    begin call
                      get env var print
                      begin params 3
                        push const string "... inside of array iter func: "
                        ,
                        get local var i (2 1)
                        ,
                        begin get property
                          get local var self (3 1)
                          get local var i (2 1)
                        end get property ret values 1
                      end params ret values 3
                    end call ret values 0


[72] return true, i, self[i++]

                    begin code list
                      begin return
                        const true
                        ,
                        get local var i (2 1)
                        ,
                        begin get property
                          get local var self (3 1)
                          begin code list
                            begin set local var
                              get local var i (2 1)
                            end set local var #temp (2 0)

                            begin set local var
                              begin operator +
                                get local var i (2 1)
                                push const number 1
                              end operator +
                            end set local var i (2 1)

                            get local var #temp (2 0)
                          end code list ret values 1
                        end get property ret values 1
                      end return values 3
                    end code list ret values 0
                  end scope ret values 0
                end then
              end if ret values 0
            end function
          end return values 1
        end code list ret values 0
      end function

[67] Array.__iter = function(){

      get env var auto create Array
      push const string "__iter"
    end set property ret values 0


[76] for(k, v in [10 20 30 40 50]){

    begin scope
      begin locals 4
        25 k
        26 v
        27 #func
        28 #valid
      end locals
      new local var k (25 0)

      new local var v (26 0)

      new local var #func (27 0 temp)

      new local var #valid (28 0 temp)

      begin code list
        begin set local var
          begin call method
            begin array 5
              begin set auto index
                push const number 10
              end set auto index
              ,
              begin set auto index
                push const number 20
              end set auto index
              ,
              begin set auto index
                push const number 30
              end set auto index
              ,
              begin set auto index
                push const number 40
              end set auto index
              ,
              begin set auto index
                push const number 50
              end set auto index
            end array
            begin params 1
              push const string "__iter"
            end params ret values 1
          end call method ret values 1
        end set local var #func (27 0 temp)

        begin loop
          begin set local var
            begin set local var
              begin set local var
                begin call
                  get local var #func (27 0 temp)
                  begin params 0
                  end params ret values 0
                end call ret values 3
              end set local var v (26 0)
            end set local var k (25 0)
          end set local var #valid (28 0 temp)

          begin if
            begin bool exp
              begin logic not
                get local var #valid (28 0 temp)
              end logic not
            end bool exp
            begin then
              break
            end then
          end if ret values 0


[77] print( k " --> " v )

          begin scope
            begin call
              get env var print
              begin params 3
                get local var k (25 0)
                ,
                push const string " --> "
                ,
                get local var v (26 0)
              end params ret values 3
            end call ret values 0
          end scope ret values 0
        end loop ret values 0
      end code list ret values 0
    end scope ret values 0


[80] print("Test array prototype:", [1 2 3].prototype === Array)

    begin call
      get env var print
      begin params 2
        push const string "Test array prototype:"
        ,
        begin logic ===
          begin get property
            begin array 3
              begin set auto index
                push const number 1
              end set auto index
              ,
              begin set auto index
                push const number 2
              end set auto index
              ,
              begin set auto index
                push const number 3
              end set auto index
            end array
            push const string "prototype"
          end get property ret values 1
          get env var Array
        end logic ===
      end params ret values 2
    end call ret values 0


[82] print "Test range iterator"

    begin call
      get env var print
      begin params 1
        push const string "Test range iterator"
      end params ret values 1
    end call ret values 0


[83] var range = function(a, b){

    begin set local var
      begin function
        begin locals, total 4
          0 a (param)
          1 b (param)
          2 _E
          3 _G
        end locals

[84] return function(){

        begin return
          begin function
            begin locals, total 3
              0 _E
              1 _G
            end locals

[85] if(a <= b){

            begin if
              begin bool exp
                begin logic <=
                  get local var a (0 1 param)
                  get local var b (1 1 param)
                end logic <=
              end bool exp
              begin then

[86] return true, a++

                begin scope
                  begin locals 1
                    2 #temp
                  end locals
                  begin return
                    const true
                    ,
                    begin code list
                      begin set local var
                        get local var a (0 1 param)
                      end set local var #temp (2 0)

                      begin set local var
                        begin operator +
                          get local var a (0 1 param)
                          push const number 1
                        end operator +
                      end set local var a (0 1 param)

                      get local var #temp (2 0)
                    end code list ret values 1
                  end return values 2
                end scope ret values 0
              end then
            end if ret values 0
          end function
        end return values 1
      end function
    end set local var range (29 0)


[90] for(var i in range(10, 13)){

    begin scope
      begin locals 3
        30 i
        31 #func
        32 #valid
      end locals
      new local var i (30 0)

      new local var #func (31 0 temp)

      new local var #valid (32 0 temp)

      begin code list
        begin set local var
          begin call method
            begin call
              get local var range (29 0)
              begin params 2
                push const number 10
                ,
                push const number 13
              end params ret values 2
            end call ret values 1
            begin params 1
              push const string "__iter"
            end params ret values 1
          end call method ret values 1
        end set local var #func (31 0 temp)

        begin loop
          begin set local var
            begin set local var
              begin call
                get local var #func (31 0 temp)
                begin params 0
                end params ret values 0
              end call ret values 2
            end set local var i (30 0)
          end set local var #valid (32 0 temp)

          begin if
            begin bool exp
              begin logic not
                get local var #valid (32 0 temp)
              end logic not
            end bool exp
            begin then
              break
            end then
          end if ret values 0


[91] print "i = "..i

          begin scope
            begin call
              get env var print
              begin params 1
                begin operator ..
                  push const string "i = "
                  get local var i (30 0)
                end operator ..
              end params ret values 1
            end call ret values 0
          end scope ret values 0
        end loop ret values 0
      end code list ret values 0
    end scope ret values 0
  end scope ret values 0


[96] print "7 && 9 = "..(7 && 9)

  begin call
    get env var print
    begin params 1
      begin operator ..
        push const string "7 && 9 = "
        begin logic &&
          push const number 7
          push const number 9
        end logic &&
      end operator ..
    end params ret values 1
  end call ret values 0


[97] print "7 || 9 = "..(7 || 9)

  begin call
    get env var print
    begin params 1
      begin operator ..
        push const string "7 || 9 = "
        begin logic ||
          push const number 7
          push const number 9
        end logic ||
      end operator ..
    end params ret values 1
  end call ret values 0


[102] var v1 = {x=1 y=2}

  begin scope
    begin locals 2
      33 v1
      34 a
    end locals
    begin set local var
      begin object 2
        begin set by name
          push const number 1
        end set by name: [x]
        ,
        begin set by name
          push const number 2
        end set by name: [y]
      end object
    end set local var v1 (33 0)


[103] var a = {[v1]="vv1" v2="vv2"}

    begin set local var
      begin object 2
        begin set by exp
          get local var v1 (33 0)
          push const string "vv1"
        end set by exp
        ,
        begin set by name
          push const string "vv2"
        end set by name: [v2]
      end object
    end set local var a (34 0)


[104] print( a[v1] a.v2 )

    begin call
      get env var print
      begin params 2
        begin get property
          get local var a (34 0)
          get local var v1 (33 0)
        end get property ret values 1
        ,
        begin get property
          get local var a (34 0)
          push const string "v2"
        end get property ret values 1
      end params ret values 2
    end call ret values 0
  end scope ret values 0


[109] var Person = {

  begin set local var
    begin object 3

[110] __construct: function(firstname, lastname){

      begin set by name
        begin function
          begin locals, total 4
            0 firstname (param)
            1 lastname (param)
            2 _E
            3 _G
          end locals

[111] this.firstname = firstname

          begin set property
            get local var firstname (0 0 param)
            push this
            push const string "firstname"
          end set property ret values 0


[112] this.lastname = lastname

          begin set property
            get local var lastname (1 0 param)
            push this
            push const string "lastname"
          end set property ret values 0
        end function
      end set by name: [__construct]
      ,

[114] walk = function(){

      begin set by name
        begin function
          begin locals, total 2
            0 _E
            1 _G
          end locals

[115] print this.fullname .. " is walking!"

          begin call
            get env var print
            begin params 1
              begin operator ..
                begin get property
                  push this
                  push const string "fullname"
                end get property ret values 1
                push const string " is walking!"
              end operator ..
            end params ret values 1
          end call ret values 0
        end function
      end set by name: [walk]
      ,

[117] __get@fullname = function(){

      begin set by name
        begin function
          begin locals, total 2
            0 _E
            1 _G
          end locals

[118] return this.firstname .. " " .. this.lastname

          begin return
            begin operator ..
              begin operator ..
                begin get property
                  push this
                  push const string "firstname"
                end get property ret values 1
                push const string " "
              end operator ..
              begin get property
                push this
                push const string "lastname"
              end get property ret values 1
            end operator ..
          end return values 1
        end function
      end set by name: [__get@fullname]
    end object
  end set local var Person (35 0)


[122] var p = Person("James", "Bond")

  begin set local var
    begin call
      get local var Person (35 0)
      begin params 2
        push const string "James"
        ,
        push const string "Bond"
      end params ret values 2
    end call ret values 1
  end set local var p (36 0)


[123] p.walk()

  begin call method
    get local var p (36 0)
    begin params 2
      push const string "walk"
      ,
      nop
    end params ret values 1
  end call method ret values 0


[124] print p

  begin call
    get env var print
    begin params 1
      get local var p (36 0)
    end params ret values 1
  end call ret values 0


[127] var IvanPerson = extends Person {

  begin set local var
    begin extends
      get local var Person (35 0)
      begin object 1

[128] __construct: function(){

        begin set by name
          begin function
            begin locals, total 2
              0 _E
              1 _G
            end locals

[129] super.__construct.call(this, "Ivan", "Petrov")

            begin call method
              begin get property
                super
                push const string "__construct"
              end get property ret values 1
              begin params 4
                push const string "call"
                ,
                push this
                ,
                push const string "Ivan"
                ,
                push const string "Petrov"
              end params ret values 4
            end call method ret values 0
          end function
        end set by name: [__construct]
      end object
    end extends ret values 1
  end set local var IvanPerson (37 0)


[133] var p = IvanPerson()

  begin set local var
    begin call
      get local var IvanPerson (37 0)
      begin params 1
        nop
      end params ret values 0
    end call ret values 1
  end set local var p (38 0)


[134] p.walk()

  begin call method
    get local var p (38 0)
    begin params 2
      push const string "walk"
      ,
      nop
    end params ret values 1
  end call method ret values 0


[135] print p

  begin call
    get env var print
    begin params 1
      get local var p (38 0)
    end params ret values 1
  end call ret values 0


[139] var vec3 = {

  begin set local var
    begin object 3

[140] __construct = function(x, y, z){

      begin set by name
        begin function
          begin locals, total 5
            0 x (param)
            1 y (param)
            2 z (param)
            3 _E
            4 _G
          end locals

[141] this.x = x

          begin set property
            get local var x (0 0 param)
            push this
            push const string "x"
          end set property ret values 0


[142] this.y = y

          begin set property
            get local var y (1 0 param)
            push this
            push const string "y"
          end set property ret values 0


[143] this.z = z

          begin set property
            get local var z (2 0 param)
            push this
            push const string "z"
          end set property ret values 0
        end function
      end set by name: [__construct]
      ,

[145] __add = function(a, b){

      begin set by name
        begin function
          begin locals, total 4
            0 a (param)
            1 b (param)
            2 _E
            3 _G
          end locals

[146] return vec3(a.x + b.x, a.y + b.y, a.z + b.z)

          begin tail call
            get local var vec3 (39 1)
            begin params 3
              begin operator +
                begin get property
                  get local var a (0 0 param)
                  push const string "x"
                end get property ret values 1
                begin get property
                  get local var b (1 0 param)
                  push const string "x"
                end get property ret values 1
              end operator +
              ,
              begin operator +
                begin get property
                  get local var a (0 0 param)
                  push const string "y"
                end get property ret values 1
                begin get property
                  get local var b (1 0 param)
                  push const string "y"
                end get property ret values 1
              end operator +
              ,
              begin operator +
                begin get property
                  get local var a (0 0 param)
                  push const string "z"
                end get property ret values 1
                begin get property
                  get local var b (1 0 param)
                  push const string "z"
                end get property ret values 1
              end operator +
            end params ret values 3
          end tail call
        end function
      end set by name: [__add]
      ,

[148] __mul = function(a, b){

      begin set by name
        begin function
          begin locals, total 4
            0 a (param)
            1 b (param)
            2 _E
            3 _G
          end locals

[149] return vec3(a.x * b.x, a.y * b.y, a.z * b.z)

          begin tail call
            get local var vec3 (39 1)
            begin params 3
              begin operator *
                begin get property
                  get local var a (0 0 param)
                  push const string "x"
                end get property ret values 1
                begin get property
                  get local var b (1 0 param)
                  push const string "x"
                end get property ret values 1
              end operator *
              ,
              begin operator *
                begin get property
                  get local var a (0 0 param)
                  push const string "y"
                end get property ret values 1
                begin get property
                  get local var b (1 0 param)
                  push const string "y"
                end get property ret values 1
              end operator *
              ,
              begin operator *
                begin get property
                  get local var a (0 0 param)
                  push const string "z"
                end get property ret values 1
                begin get property
                  get local var b (1 0 param)
                  push const string "z"
                end get property ret values 1
              end operator *
            end params ret values 3
          end tail call
        end function
      end set by name: [__mul]
    end object
  end set local var vec3 (39 0)


[153] var v1 = vec3(10 20 30)

  begin set local var
    begin call
      get local var vec3 (39 0)
      begin params 3
        push const number 10
        ,
        push const number 20
        ,
        push const number 30
      end params ret values 3
    end call ret values 1
  end set local var v1 (40 0)


[154] var v2 = vec3(1 2 3)

  begin set local var
    begin call
      get local var vec3 (39 0)
      begin params 3
        push const number 1
        ,
        push const number 2
        ,
        push const number 3
      end params ret values 3
    end call ret values 1
  end set local var v2 (41 0)


[155] var v3 = v1 + v2 * v2

  begin set local var
    begin operator +
      get local var v1 (40 0)
      begin operator *
        get local var v2 (41 0)
        get local var v2 (41 0)
      end operator *
    end operator +
  end set local var v3 (42 0)


[156] print v3

  begin call
    get env var print
    begin params 1
      get local var v3 (42 0)
    end params ret values 1
  end call ret values 0


[159] print "Test properties"

  begin scope
    begin locals 1
      43 a
    end locals
    begin call
      get env var print
      begin params 1
        push const string "Test properties"
      end params ret values 1
    end call ret values 0


[161] var a = {

    begin set local var
      begin object 3

[162] _color = "red"

        begin set by name
          push const string "red"
        end set by name: [_color]
        ,

[163] __get@color = function(){ return this._color }

        begin set by name
          begin function
            begin locals, total 2
              0 _E
              1 _G
            end locals
            begin return
              begin get property
                push this
                push const string "_color"
              end get property ret values 1
            end return values 1
          end function
        end set by name: [__get@color]
        ,

[164] __set@color = function(v){ this._color = v }

        begin set by name
          begin function
            begin locals, total 3
              0 v (param)
              1 _E
              2 _G
            end locals
            begin set property
              get local var v (0 0 param)
              push this
              push const string "_color"
            end set property ret values 0
          end function
        end set by name: [__set@color]
      end object
    end set local var a (43 0)


[168] print a["color"]

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (43 0)
          push const string "color"
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[170] a.color = "blue"

    begin set property
      push const string "blue"
      get local var auto create a (43 0)
      push const string "color"
    end set property ret values 0


[171] print a.color

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (43 0)
          push const string "color"
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[173] a = {

    begin set local var
      begin object 4

[174] _color = "white"

        begin set by name
          push const string "white"
        end set by name: [_color]
        ,

[175] __get = function(name){

        begin set by name
          begin function
            begin locals, total 3
              0 name (param)
              1 _E
              2 _G
            end locals

[176] if(name == "color")

            begin if
              begin bool exp
                begin logic ==
                  get local var name (0 0 param)
                  push const string "color"
                end logic ==
              end bool exp
              begin then

[177] return this._color

                begin code list
                  begin return
                    begin get property
                      push this
                      push const string "_color"
                    end get property ret values 1
                  end return values 1
                end code list ret values 0
              end then
            end if ret values 0
          end function
        end set by name: [__get]
        ,

[179] __set = function(name, v){

        begin set by name
          begin function
            begin locals, total 4
              0 name (param)
              1 v (param)
              2 _E
              3 _G
            end locals

[180] if(name == "color")

            begin if
              begin bool exp
                begin logic ==
                  get local var name (0 0 param)
                  push const string "color"
                end logic ==
              end bool exp
              begin then

[181] this._color = v

                begin set property
                  get local var v (1 0 param)
                  push this
                  push const string "_color"
                end set property ret values 0
              end then
            end if ret values 0
          end function
        end set by name: [__set]
        ,

[183] __del = function(name){

        begin set by name
          begin function
            begin locals, total 3
              0 name (param)
              1 _E
              2 _G
            end locals

[184] if(name == "color")

            begin if
              begin bool exp
                begin logic ==
                  get local var name (0 0 param)
                  push const string "color"
                end logic ==
              end bool exp
              begin then

[185] delete this._color

                begin delete
                  push this
                  push const string "_color"
                end delete
              end then
            end if ret values 0
          end function
        end set by name: [__del]
      end object
    end set local var a (43 0)


[190] print a.color

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (43 0)
          push const string "color"
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[192] a.color = "green"

    begin set property
      push const string "green"
      get local var auto create a (43 0)
      push const string "color"
    end set property ret values 0


[193] print a.color

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (43 0)
          push const string "color"
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[195] delete a.color

    begin delete
      get local var a (43 0)
      push const string "color"
    end delete


[196] print a.color

    begin call
      get env var print
      begin params 1
        begin get property
          get local var a (43 0)
          push const string "color"
        end get property ret values 1
      end params ret values 1
    end call ret values 0


[198] print "Test multi dimensional properties"

    begin call
      get env var print
      begin params 1
        push const string "Test multi dimensional properties"
      end params ret values 1
    end call ret values 0


[199] a = {

    begin set local var
      begin object 4

[200] _matrix = {}

        begin set by name
          begin object 0
          end object
        end set by name: [_matrix]
        ,

[201] __getdim = function(x, y){

        begin set by name
          begin function
            begin locals, total 4
              0 x (param)
              1 y (param)
              2 _E
              3 _G
            end locals

[202] return this._matrix[y*4 + x]

            begin return
              begin get property
                begin get property
                  push this
                  push const string "_matrix"
                end get property ret values 1
                begin operator +
                  begin operator *
                    get local var y (1 0 param)
                    push const number 4
                  end operator *
                  get local var x (0 0 param)
                end operator +
              end get property ret values 1
            end return values 1
          end function
        end set by name: [__getdim]
        ,

[204] __setdim = function(value, x, y){

        begin set by name
          begin function
            begin locals, total 5
              0 value (param)
              1 x (param)
              2 y (param)
              3 _E
              4 _G
            end locals

[205] this._matrix[y*4 + x] = value

            begin set property
              get local var value (0 0 param)
              begin get property auto create
                push this
                push const string "_matrix"
              end get property auto create ret values 1
              begin operator +
                begin operator *
                  get local var y (2 0 param)
                  push const number 4
                end operator *
                get local var x (1 0 param)
              end operator +
            end set property ret values 0
          end function
        end set by name: [__setdim]
        ,

[207] __deldim = function(x, y){

        begin set by name
          begin function
            begin locals, total 4
              0 x (param)
              1 y (param)
              2 _E
              3 _G
            end locals

[208] delete this._matrix[y*4 + x]

            begin delete
              begin get property
                push this
                push const string "_matrix"
              end get property ret values 1
              begin operator +
                begin operator *
                  get local var y (1 0 param)
                  push const number 4
                end operator *
                get local var x (0 0 param)
              end operator +
            end delete
          end function
        end set by name: [__deldim]
      end object
    end set local var a (43 0)


[212] a[1, 2] = 5		// a.__setdim(5, 1, 2)

    begin set dim
      push const number 5
      get local var a (43 0)
      begin params 2
        push const number 1
        ,
        push const number 2
      end params ret values 2
    end set dim ret values 0


[214] print a[1, 2]	// print(a.__getdim(1, 2))

    begin call
      get env var print
      begin params 1
        begin call method
          get local var a (43 0)
          begin params 3
            push const string "__getdim"
            ,
            push const number 1
            ,
            push const number 2
          end params ret values 3
        end call method ret values 1
      end params ret values 1
    end call ret values 0


[216] delete a[1, 2]	// a.__deldim(1, 2)

    begin call method
      get local var a (43 0)
      begin params 3
        push const string "__deldim"
        ,
        push const number 1
        ,
        push const number 2
      end params ret values 3
    end call method ret values 0


[217] print a[1, 2]	// print(a.__getdim(1, 2))

    begin call
      get env var print
      begin params 1
        begin call method
          get local var a (43 0)
          begin params 3
            push const string "__getdim"
            ,
            push const number 1
            ,
            push const number 2
          end params ret values 3
        end call method ret values 1
      end params ret values 1
    end call ret values 0
  end scope ret values 0


[220] print "Test function inline call"

  begin call
    get env var print
    begin params 1
      push const string "Test function inline call"
    end params ret values 1
  end call ret values 0


[221] print function(a b c){ return a + b * c }(1 2 3)

  begin call
    get env var print
    begin params 1
      begin call
        begin function
          begin locals, total 5
            0 a (param)
            1 b (param)
            2 c (param)
            3 _E
            4 _G
          end locals
          begin return
            begin operator +
              get local var a (0 0 param)
              begin operator *
                get local var b (1 0 param)
                get local var c (2 0 param)
              end operator *
            end operator +
          end return values 1
        end function
        begin params 3
          push const number 1
          ,
          push const number 2
          ,
          push const number 3
        end params ret values 3
      end call ret values 1
    end params ret values 1
  end call ret values 0


[224] print "Test local vars scope"

  begin scope
    begin locals 1
      44 i
    end locals
    begin call
      get env var print
      begin params 1
        push const string "Test local vars scope"
      end params ret values 1
    end call ret values 0


[225] var i = 1;

    begin set local var
      push const number 1
    end set local var i (44 0)


[227] var i = i

    begin scope
      begin locals 1
        45 i
      end locals
      begin set local var
        get local var i (44 0)
      end set local var i (45 0)


[228] i++

      begin code list
        begin set local var
          begin operator +
            get local var i (45 0)
            push const number 1
          end operator +
        end set local var i (45 0)
      end code list ret values 0


[229] print i

      begin call
        get env var print
        begin params 1
          get local var i (45 0)
        end params ret values 1
      end call ret values 0
    end scope ret values 0


[231] print i

    begin call
      get env var print
      begin params 1
        get local var i (44 0)
      end params ret values 1
    end call ret values 0
  end scope ret values 0


[234] print "Test debuglocals"

  begin call
    get env var print
    begin params 1
      push const string "Test debuglocals"
    end params ret values 1
  end call ret values 0


[241] }(10)

  begin call

[235] function(a){

    begin function
      begin locals, total 5
        0 a (param)
        1 _E
        2 _G
        3 c
      end locals

[236] var c = a * 2;

      begin set local var
        begin operator *
          get local var a (0 0 param)
          push const number 2
        end operator *
      end set local var c (3 0)


[238] var c = a - 1

      begin scope
        begin locals 1
          4 c
        end locals
        begin set local var
          begin operator -
            get local var a (0 0 param)
            push const number 1
          end operator -
        end set local var c (4 0)


[239] print debuglocals

        begin call
          get env var print
          begin params 1
            begin debug locals
              begin object 10
                begin set by name
                  get local var Person (35 1)
                end set by name: [Person]
                ,
                begin set by name
                  get local var IvanPerson (37 1)
                end set by name: [IvanPerson]
                ,
                begin set by name
                  get local var p (38 1)
                end set by name: [p]
                ,
                begin set by name
                  get local var vec3 (39 1)
                end set by name: [vec3]
                ,
                begin set by name
                  get local var v1 (40 1)
                end set by name: [v1]
                ,
                begin set by name
                  get local var v2 (41 1)
                end set by name: [v2]
                ,
                begin set by name
                  get local var v3 (42 1)
                end set by name: [v3]
                ,
                begin set by name
                  get local var transform (47 1)
                end set by name: [transform]
                ,
                begin set by name
                  get local var a (0 0 param)
                end set by name: [a]
                ,
                begin set by name
                  get local var c (4 0)
                end set by name: [c]
              end object
            end debug locals
          end params ret values 1
        end call ret values 0
      end scope ret values 0
    end function

[241] }(10)

    begin params 1
      push const number 10
    end params ret values 1
  end call ret values 0


[243] print "Script environment"

  begin call
    get env var print
    begin params 1
      push const string "Script environment"
    end params ret values 1
  end call ret values 0


[244] print _E

  begin call
    get env var print
    begin params 1
      get local var _E (0 0)
    end params ret values 1
  end call ret values 0


[246] print "Math functions"

  begin call
    get env var print
    begin params 1
      push const string "Math functions"
    end params ret values 1
  end call ret values 0


[247] var a = [Math.rand() Math.rand() Math.rand() Math.rand() Math.rand() Math.rand()]

  begin set local var
    begin array 6
      begin set auto index
        begin call method
          get env var Math
          begin params 2
            push const string "rand"
            ,
            nop
          end params ret values 1
        end call method ret values 1
      end set auto index
      ,
      begin set auto index
        begin call method
          get env var Math
          begin params 2
            push const string "rand"
            ,
            nop
          end params ret values 1
        end call method ret values 1
      end set auto index
      ,
      begin set auto index
        begin call method
          get env var Math
          begin params 2
            push const string "rand"
            ,
            nop
          end params ret values 1
        end call method ret values 1
      end set auto index
      ,
      begin set auto index
        begin call method
          get env var Math
          begin params 2
            push const string "rand"
            ,
            nop
          end params ret values 1
        end call method ret values 1
      end set auto index
      ,
      begin set auto index
        begin call method
          get env var Math
          begin params 2
            push const string "rand"
            ,
            nop
          end params ret values 1
        end call method ret values 1
      end set auto index
      ,
      begin set auto index
        begin call method
          get env var Math
          begin params 2
            push const string "rand"
            ,
            nop
          end params ret values 1
        end call method ret values 1
      end set auto index
    end array
  end set local var a (46 0)


[248] print("rand" a)

  begin call
    get env var print
    begin params 2
      push const string "rand"
      ,
      get local var a (46 0)
    end params ret values 2
  end call ret values 0


[251] delete Array.__iter // delete our iterator, use default one

  begin delete
    get env var Array
    push const string "__iter"
  end delete


[253] var transform = function(a f){

  begin set local var
    begin function
      begin locals, total 9
        0 a (param)
        1 f (param)
        2 _E
        3 _G
        4 r
      end locals

[254] var r = typeof a === "array" && [] || {}

      begin set local var
        begin logic ||
          begin logic &&
            begin logic ===
              begin typeof
                get local var a (0 0 param)
              end typeof
              push const string "array"
            end logic ===
            begin array 1
              begin set auto index
                begin params 2
                  nop
                  ,
                  const null
                end params ret values 1
              end set auto index
            end array
          end logic &&
          begin object 0
          end object
        end logic ||
      end set local var r (4 0)


[255] for(var i, v in a){

      begin scope
        begin locals 4
          5 i
          6 v
          7 #func
          8 #valid
        end locals
        new local var i (5 0)

        new local var v (6 0)

        new local var #func (7 0 temp)

        new local var #valid (8 0 temp)

        begin code list
          begin set local var
            begin call method
              get local var a (0 0 param)
              begin params 1
                push const string "__iter"
              end params ret values 1
            end call method ret values 1
          end set local var #func (7 0 temp)

          begin loop
            begin set local var
              begin set local var
                begin set local var
                  begin call
                    get local var #func (7 0 temp)
                    begin params 0
                    end params ret values 0
                  end call ret values 3
                end set local var v (6 0)
              end set local var i (5 0)
            end set local var #valid (8 0 temp)

            begin if
              begin bool exp
                begin logic not
                  get local var #valid (8 0 temp)
                end logic not
              end bool exp
              begin then
                break
              end then
            end if ret values 0


[256] r[i] = f(v)

            begin scope
              begin set property
                begin call
                  get local var f (1 0 param)
                  begin params 1
                    get local var v (6 0)
                  end params ret values 1
                end call ret values 1
                get local var auto create r (4 0)
                get local var i (5 0)
              end set property ret values 0
            end scope ret values 0
          end loop ret values 0
        end code list ret values 0
      end scope ret values 0


[258] return r

      begin code list
        begin return
          get local var r (4 0)
        end return values 1
      end code list ret values 0
    end function
  end set local var transform (47 0)


[260] a = transform(a function(a){ return a*100 })

  begin set local var
    begin call
      get local var transform (47 0)
      begin params 2
        get local var a (46 0)
        ,
        begin function
          begin locals, total 3
            0 a (param)
            1 _E
            2 _G
          end locals
          begin return
            begin operator *
              get local var a (0 0 param)
              push const number 100
            end operator *
          end return values 1
        end function
      end params ret values 2
    end call ret values 1
  end set local var a (46 0)


[261] print("mult 100" a)

  begin call
    get env var print
    begin params 2
      push const string "mult 100"
      ,
      get local var a (46 0)
    end params ret values 2
  end call ret values 0


[262] print("ceil" transform(a Math.ceil))

  begin call
    get env var print
    begin params 2
      push const string "ceil"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin get property
            get env var Math
            push const string "ceil"
          end get property ret values 1
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0


[263] print("floor" transform(a Math.floor))

  begin call
    get env var print
    begin params 2
      push const string "floor"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin get property
            get env var Math
            push const string "floor"
          end get property ret values 1
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0


[264] print("round(-1)" transform(a function(a){ return Math.round(a, -1) }))

  begin call
    get env var print
    begin params 2
      push const string "round(-1)"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin function
            begin locals, total 3
              0 a (param)
              1 _E
              2 _G
            end locals
            begin tail call method
              get env var Math
              begin params 3
                push const string "round"
                ,
                get local var a (0 0 param)
                ,
                begin neg
                  push const number 1
                end neg
              end params ret values 3
            end tail call method
          end function
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0


[265] print("round(2)" transform(a function(a){ return Math.round(a, 2) }))

  begin call
    get env var print
    begin params 2
      push const string "round(2)"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin function
            begin locals, total 3
              0 a (param)
              1 _E
              2 _G
            end locals
            begin tail call method
              get env var Math
              begin params 3
                push const string "round"
                ,
                get local var a (0 0 param)
                ,
                push const number 2
              end params ret values 3
            end tail call method
          end function
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0


[266] print("sin" transform(a Math.sin))

  begin call
    get env var print
    begin params 2
      push const string "sin"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin get property
            get env var Math
            push const string "sin"
          end get property ret values 1
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0


[267] print("cos" transform(a Math.cos))

  begin call
    get env var print
    begin params 2
      push const string "cos"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin get property
            get env var Math
            push const string "cos"
          end get property ret values 1
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0


[268] print("tan" transform(a Math.tan))

  begin call
    get env var print
    begin params 2
      push const string "tan"
      ,
      begin call
        get local var transform (47 0)
        begin params 2
          get local var a (46 0)
          ,
          begin get property
            get env var Math
            push const string "tan"
          end get property ret values 1
        end params ret values 2
      end call ret values 1
    end params ret values 2
  end call ret values 0
end function
